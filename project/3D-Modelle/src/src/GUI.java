/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;
import  java.util.List;
import java.util.ArrayList;
import java.nio.file.Files;


/**
 *
 * @author Ð�Ð´Ð¼Ð¸Ð½Ð¸Ñ�Ñ‚Ñ€Ð°Ñ‚Ð¾Ñ€
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();
    List<Searchobject> searchList = new ArrayList<Searchobject>();
    javax.swing.JFileChooser chooser = new javax.swing.JFileChooser();
    

     
    public GUI() {
       
        initComponents();
        
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        edgeLabel = new javax.swing.JLabel();
        lenLabel = new javax.swing.JLabel();
        lenTF = new javax.swing.JTextField();
        angleLabel = new javax.swing.JLabel();
        angleTF = new javax.swing.JTextField();
        toEdgeLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputList = new javax.swing.JList();
        searchButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        edgeTF = new javax.swing.JTextField();
        toEdgeTF = new javax.swing.JTextField();
        removeButton = new javax.swing.JButton();
        readFileButton = new javax.swing.JButton();
        outputButton = new javax.swing.JButton();
        readDirButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Input-GUI");

        edgeLabel.setText("Kante:");

        lenLabel.setText("Länge:");

        angleLabel.setText("Winkel:");

        angleTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                angleTFActionPerformed(evt);
            }
        });

        toEdgeLabel.setText("zur Kante:");

        inputList.setModel(listModel);// {
            // String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            //  public int getSize() { return strings.length; }
            // public Object getElementAt(int i) { return strings[i]; }
            //});
    inputList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane2.setViewportView(inputList);

    searchButton.setText("Suchen");
    searchButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButtonActionPerformed(evt);
        }
    });

    addButton.setText("hinzufügen");
    addButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            addButtonMouseClicked(evt);
        }
    });

    editButton.setText("Kante bearbeiten");
    editButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            editButtonMouseClicked(evt);
        }
    });

    removeButton.setText("Kante loeschen");
    removeButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            removeButtonMouseClicked(evt);
        }
    });

    readFileButton.setText("Datei einlesen");
    readFileButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            readFileButtonMouseClicked(evt);
        }
    });

    outputButton.setText("Test OutputGUI");
    outputButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            outputButtonActionPerformed(evt);
        }
    });

    readDirButton.setText("Ordner einlesen");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(63, 63, 63)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(edgeLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(edgeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lenLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lenTF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(angleLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(angleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(toEdgeLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(toEdgeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(addButton))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchButton)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(editButton)
                                .addComponent(removeButton))
                            .addGap(155, 155, 155)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(outputButton)
                                .addComponent(readFileButton)
                                .addComponent(readDirButton))))))
            .addContainerGap(324, Short.MAX_VALUE))
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {angleLabel, angleTF, edgeLabel, edgeTF, lenLabel, lenTF, toEdgeLabel, toEdgeTF});

    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(149, 149, 149)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editButton)
                        .addComponent(readFileButton))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(removeButton)
                        .addComponent(readDirButton))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outputButton)
                    .addGap(65, 65, 65)
                    .addComponent(searchButton)
                    .addGap(32, 32, 32)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(edgeLabel)
                .addComponent(lenLabel)
                .addComponent(lenTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(angleLabel)
                .addComponent(angleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(toEdgeLabel)
                .addComponent(addButton)
                .addComponent(edgeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(toEdgeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(24, 24, 24))
    );

    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {angleLabel, angleTF, edgeLabel, lenLabel, lenTF, toEdgeLabel});

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void angleTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_angleTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_angleTFActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        for(Searchobject obj : searchList) {
            System.out.println(obj.getId1() + "  " + obj.getLength() + "  " + obj.getAngle() + "  " + obj.getId2());
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        
        Integer id1;       
    //    if(edgeTF.getText().isEmpty()) 
    //        id1 = null;
        if (!isInteger(edgeTF.getText()) || Integer.valueOf(edgeTF.getText()) <0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Erste Kanten-ID muss eine nicht-negative ganze Zahl sein.");
            edgeTF.setText("");
            return; 
        }
        else id1 = Integer.valueOf(edgeTF.getText()); 
        
        
        Double length;
        if(lenTF.getText().isEmpty()) 
            length = null;
        else if (!isDouble(lenTF.getText()) || Double.valueOf(lenTF.getText()) <0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Kantenlaenge muss eine nicht-negative Zahl sein.");
            lenTF.setText("");
            return; 
        }
        else length = Double.valueOf(lenTF.getText()); 
        
        
        Double angle;
        if(angleTF.getText().isEmpty()) 
            angle = null;
        else if (!isDouble(angleTF.getText()) || Double.valueOf(angleTF.getText()) <0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Winkel muss eine nicht-negative Zahl sein.");
            angleTF.setText("");
            return; 
        }
        else angle = Double.valueOf(angleTF.getText()); 
        
   

        Integer id2;       
        if(toEdgeTF.getText().isEmpty()) 
            id2 = null;
        else if (!isInteger(toEdgeTF.getText()) || Integer.valueOf(toEdgeTF.getText()) <0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Zweite Kanten-ID muss eine nicht-negative ganze Zahl sein.");
            toEdgeTF.setText("");
            return; 
        }
        else id2 = Integer.valueOf(toEdgeTF.getText()); 
        
        if(valuesMatch(id1,length,angle,id2,searchList)) {
        Searchobject searchObj = new Searchobject(id1, length,angle,id2);
        searchList.add(searchObj);
        String newLine = "Kante " + id1 + ":      " + "Laenge: " + length + ",      Winkel: " + angle + "   zur Kante " + id2;
        listModel.addElement(newLine );
        }
        
        edgeTF.setText("");   
        lenTF.setText("");
        angleTF.setText("");
        toEdgeTF.setText("");
        
        if(addButton.getText().equals("Speichern"))
            addButton.setText("hinzufuegen");
        
        
        
    }//GEN-LAST:event_addButtonMouseClicked

    private void editButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseClicked
        int index = inputList.getSelectedIndex();
        if (index == -1) return;
            
        addButton.setText("Speichern");
        edgeTF.setText(java.util.Objects.toString(searchList.get(index).getId1(), ""));   
        lenTF.setText(java.util.Objects.toString(searchList.get(index).getLength(), ""));   
        angleTF.setText(java.util.Objects.toString(searchList.get(index).getAngle(), ""));     
        toEdgeTF.setText(java.util.Objects.toString(searchList.get(index).getId2(), ""));   
        
        searchList.remove(inputList.getSelectedIndex());
        listModel.removeElementAt(inputList.getSelectedIndex());
        
    }//GEN-LAST:event_editButtonMouseClicked

    private void removeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeButtonMouseClicked
        if(inputList.getSelectedIndex()!=-1) {
            searchList.remove(inputList.getSelectedIndex());
            listModel.removeElementAt(inputList.getSelectedIndex());
            
        }
    }//GEN-LAST:event_removeButtonMouseClicked

    private void readFileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readFileButtonMouseClicked
         chooser.setFileSelectionMode( javax.swing.JFileChooser.FILES_AND_DIRECTORIES );
       // chooser.setAcceptAllFileFilterUsed(false);
         chooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("OBJ-Dateien","obj"));
        
        int ret = chooser.showDialog(null, "Open file");                
        if (ret == javax.swing.JFileChooser.APPROVE_OPTION) {
           // java.nio.file.Files.Path path = chooser.getSelectedFile().getPath();
            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
    		BuildLogic aBuildLogic = BuildLogic.getBuildLogic();
    		aBuildLogic.createOBJ(chooser.getSelectedFile().getPath());
    		aBuildLogic.createFigure();

           // java.nio.file.Files.list(path);
        }
    }//GEN-LAST:event_readFileButtonMouseClicked

    private void outputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputButtonActionPerformed
       outputGUI outg = new outputGUI(searchList);
       outg.setVisible(true);
    }//GEN-LAST:event_outputButtonActionPerformed
    
    private boolean valuesMatch(Integer id1, Double length, Double angle, Integer id2, List<Searchobject> searchList) {
        for(Searchobject obj : searchList) {
            if(obj.getId1().equals(id1) && !obj.getLength().equals(length)) {               
                javax.swing.JOptionPane.showMessageDialog(this, "Diese Kante hat schon eine andere Laenge!");
                return false;
            }
            
            else if (obj.getId1().equals(id1) && obj.getId2().equals(id2) &&  !obj.getAngle().equals(angle)) {
                javax.swing.JOptionPane.showMessageDialog(this, "Diese 2 Kanten haben schon einen anderen Winkel!");
                return false;
            }                               
        }
        
        return true;
    }
    
    
    private boolean isInteger(String string) {
        try {
            Integer.valueOf(string);
            return true;
        } 
        catch (NumberFormatException e) {
            return false;
        }
    }
    
    
    private boolean isDouble(String string) {
        try {
         Double.valueOf(string);
            return true;
        } 
        catch (NumberFormatException e) {
            return false;
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel angleLabel;
    private javax.swing.JTextField angleTF;
    private javax.swing.JLabel edgeLabel;
    private javax.swing.JTextField edgeTF;
    private javax.swing.JButton editButton;
    private javax.swing.JList inputList;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lenLabel;
    private javax.swing.JTextField lenTF;
    private javax.swing.JButton outputButton;
    private javax.swing.JButton readDirButton;
    private javax.swing.JButton readFileButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel toEdgeLabel;
    private javax.swing.JTextField toEdgeTF;
    // End of variables declaration//GEN-END:variables
}
